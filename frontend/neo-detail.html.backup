<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Story Detail - NeoSharX</title>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="" />
    <link
      href="https://fonts.googleapis.com/css2?family=Newsreader:wght@400;500;700;800&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              primary: "#067ff9",
              "background-light": "#f5f7f8",
              "background-dark": "#0f1923",
              "content-light": "#111418",
              "content-dark": "#f5f7f8",
              "subtle-light": "#5f758c",
              "subtle-dark": "#a0aec0",
            },
            fontFamily: {
              display: ["Newsreader"],
            },
          },
        },
      };
    </script>
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
      rel="stylesheet"
    />
    <style>
      .prose {
        color: #111418;
        max-width: 65ch;
      }
      .dark .prose {
        color: #f5f7f8;
      }
      .prose h2 {
        font-size: 2rem;
        font-weight: 800;
        margin-top: 2.5rem;
        margin-bottom: 1.5rem;
        line-height: 1.3;
      }
      .prose h3 {
        font-size: 1.5rem;
        font-weight: 700;
        margin-top: 2rem;
        margin-bottom: 1.25rem;
      }
      .prose p {
        margin-bottom: 1.5rem;
        line-height: 1.75;
        font-size: 1.125rem;
      }
      .prose img, .prose video {
        margin: 2.5rem 0;
        border-radius: 0.75rem;
        width: 100%;
      }
      .prose ul, .prose ol {
        margin: 1.5rem 0;
        padding-left: 1.75rem;
      }
      .prose li {
        margin-bottom: 0.75rem;
        line-height: 1.75;
      }
    </style>
  </head>
  <body
    class="bg-background-light dark:bg-background-dark font-display text-content-light dark:text-content-dark"
    data-page="neo-detail"
  >
    <div class="relative flex flex-col min-h-screen w-full">
      <div id="nav-container"></div>

      <!-- Main Content -->
      <main class="flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Loading State -->
        <div id="loadingState" class="text-center py-12">
          <div
            class="inline-block animate-spin rounded-full h-12 w-12 border-4 border-primary border-t-transparent"
          ></div>
          <p class="mt-4 text-subtle-light dark:text-subtle-dark">
            Loading story...
          </p>
        </div>

        <!-- Error State -->
        <div id="errorState" class="hidden text-center py-12">
          <p class="text-red-500 text-lg mb-4">Story not found</p>
          <a
            href="neo-dynamic.html"
            class="inline-block bg-primary text-white font-bold px-6 py-3 rounded-lg hover:bg-primary/90 transition-colors"
          >
            Back to Stories
          </a>
        </div>

        <!-- Story Content -->
        <article id="storyContent" class="max-w-4xl mx-auto hidden">
          <!-- Hero Image -->
          <div
            id="heroImage"
            class="w-full h-96 bg-cover bg-center rounded-2xl mb-8"
          ></div>

          <!-- Story Header -->
          <div class="mb-8">
            <div class="flex items-center gap-4 mb-4">
              <span
                id="categoryBadge"
                class="px-3 py-1 bg-primary/10 text-primary text-sm font-bold rounded-full uppercase tracking-wider"
              ></span>
            </div>
            <h1
              id="storyHeading"
              class="text-5xl font-extrabold tracking-tight mb-4"
            ></h1>
            <p
              id="storyIntroduction"
              class="text-2xl text-subtle-light dark:text-subtle-dark mb-6"
            ></p>

            <div
              class="flex items-center gap-6 text-sm text-subtle-light dark:text-subtle-dark mb-8"
            >
              <div class="flex items-center gap-2">
                <span class="material-symbols-outlined text-lg">person</span>
                <span id="authorName"></span>
              </div>
              <div class="flex items-center gap-2">
                <span class="material-symbols-outlined text-lg">calendar_today</span>
                <span id="publishedDate"></span>
              </div>
              <div class="flex items-center gap-2">
                <span class="material-symbols-outlined text-lg">schedule</span>
                <span id="readTime"></span> min read
              </div>
            </div>
          </div>

          <!-- Story Sections -->
          <div id="storySections" class="prose prose-lg max-w-none mb-12"></div>

          <!-- Tags -->
          <div class="mb-12">
            <h3 class="text-xl font-bold mb-4">Related Topics</h3>
            <div id="tagsContainer" class="flex flex-wrap gap-2"></div>
          </div>

          <!-- Back to Stories -->
          <div class="mt-12 pt-8 border-t border-subtle-light/20 dark:border-subtle-dark/20">
            <a
              href="neo-dynamic.html"
              class="inline-flex items-center gap-2 text-primary hover:text-primary/80 font-medium transition-colors"
            >
              <span class="material-symbols-outlined">arrow_back</span>
              <span>Back to Neo Stories</span>
            </a>
          </div>
        </article>
      </main>

      <footer
        class="bg-background-light dark:bg-background-dark border-t border-subtle-light/20 dark:border-subtle-dark/20"
      >
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div
            class="flex flex-col md:flex-row justify-between items-center gap-6"
          >
            <div class="flex items-center gap-2 text-primary">
              <svg
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 48 48"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4 42.4379C4 42.4379 14.0962 36.0744 24 41.1692C35.0664 46.8624 44 42.2078 44 42.2078L44 7.01134C44 7.01134 35.068 11.6577 24.0031 5.96913C14.0971 0.876274 4 7.27094 4 7.27094L4 42.4379Z"
                  fill="currentColor"
                ></path>
              </svg>
              <h2 class="text-lg font-bold">NeoSharX</h2>
            </div>
            <div
              class="flex flex-wrap items-center justify-center gap-x-6 gap-y-2"
            >
              <a
                class="text-sm text-subtle-light dark:text-subtle-dark hover:text-primary transition-colors"
                href="#"
                >About</a
              >
              <a
                class="text-sm text-subtle-light dark:text-subtle-dark hover:text-primary transition-colors"
                href="#"
                >Contact</a
              >
              <a
                class="text-sm text-subtle-light dark:text-subtle-dark hover:text-primary transition-colors"
                href="#"
                >Terms of Service</a
              >
              <a
                class="text-sm text-subtle-light dark:text-subtle-dark hover:text-primary transition-colors"
                href="#"
                >Privacy Policy</a
              >
            </div>
            <p class="text-sm text-subtle-light dark:text-subtle-dark">
              Â© 2023 NeoSharX. All rights reserved.
            </p>
          </div>
        </div>
      </footer>
    </div>

    <script>
      const API_BASE_URL = "http://localhost:8000/api/auth";

      // Get slug from URL
      const urlParams = new URLSearchParams(window.location.search);
      const slug = urlParams.get("slug");

      async function loadStory() {
        const loadingState = document.getElementById("loadingState");
        const errorState = document.getElementById("errorState");
        const storyContent = document.getElementById("storyContent");

        if (!slug) {
          console.error("No slug provided in URL");
          loadingState.classList.add("hidden");
          errorState.classList.remove("hidden");
          return;
        }

        try {
          console.log("Fetching story with slug:", slug);
          const response = await fetch(`${API_BASE_URL}/neo-stories/${slug}/`);

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const story = await response.json();
          console.log("Story data loaded:", story);

          loadingState.classList.add("hidden");
          storyContent.classList.remove("hidden");
          renderStory(story);
        } catch (error) {
          console.error("Error loading story:", error);
          loadingState.classList.add("hidden");
          errorState.classList.remove("hidden");
        }
      }

      function renderStory(story) {
        // Update page title
        const storyTitle = story.header || story.title || "Neo Story";
        document.title = `${storyTitle} - NeoSharX`;

        // Hero Image
        const heroImage = document.getElementById("heroImage");
        heroImage.style.backgroundImage = `url('${story.main_image || ""}')`;

        // Category Badge
        const categoryBadge = document.getElementById("categoryBadge");
        categoryBadge.textContent = story.category || "Story";

        // Header & Introduction
        document.getElementById("storyHeading").textContent = storyTitle;
        document.getElementById("storyIntroduction").textContent =
          story.introduction || story.summary || "";

        // Author Info
        document.getElementById("authorName").textContent =
          story.author_name || "NeoSharX Team";

        // Date & Read Time
        const publishedDate = story.published_at
          ? new Date(story.published_at).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          : "Recently published";
        document.getElementById("publishedDate").textContent = publishedDate;
        document.getElementById("readTime").textContent =
          story.read_time || 5;

        // Story Sections - CRITICAL: Parse JSON string
        const sectionsContainer = document.getElementById("storySections");
        let sectionsHTML = "";

        try {
          // The API returns sections as a JSON STRING, not an array
          let sections = [];
          
          if (typeof story.sections === "string") {
            // Parse the JSON string
            sections = JSON.parse(story.sections);
            console.log("Parsed sections:", sections);
          } else if (Array.isArray(story.sections)) {
            // Already an array
            sections = story.sections;
          }

          if (sections && sections.length > 0) {
            sectionsHTML = sections
              .map((section) => {
                let html = "";

                // Add subheading if present
                if (section.subheading || section.heading) {
                  html += `<h2>${section.subheading || section.heading}</h2>`;
                }

                // Add paragraph/content
                if (section.paragraph || section.content) {
                  const content = section.paragraph || section.content;
                  // Split by double newlines to create separate paragraphs
                  const paragraphs = content.split("\n\n");
                  html += paragraphs
                    .map((p) => (p.trim() ? `<p>${p.trim()}</p>` : ""))
                    .join("");
                }

                // Add media (image or video)
                if (section.media_type === "image" && section.media_url) {
                  html += `<img src="${section.media_url}" alt="${
                    section.media_caption || section.subheading || "Story image"
                  }" />`;
                  if (section.media_caption) {
                    html += `<p class="text-sm text-subtle-light dark:text-subtle-dark text-center -mt-6 mb-6"><em>${section.media_caption}</em></p>`;
                  }
                } else if (section.media_type === "video" && section.media_url) {
                  // Handle YouTube videos
                  let videoUrl = section.media_url;
                  if (videoUrl.includes("youtube.com/watch")) {
                    const videoId = new URL(videoUrl).searchParams.get("v");
                    videoUrl = `https://www.youtube.com/embed/${videoId}`;
                  } else if (videoUrl.includes("youtu.be/")) {
                    const videoId = videoUrl.split("youtu.be/")[1].split("?")[0];
                    videoUrl = `https://www.youtube.com/embed/${videoId}`;
                  }
                  
                  html += `
                    <div class="aspect-video my-8">
                      <iframe src="${videoUrl}" 
                              class="w-full h-full rounded-xl" 
                              frameborder="0" 
                              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                              allowfullscreen>
                      </iframe>
                    </div>
                  `;
                  if (section.media_caption) {
                    html += `<p class="text-sm text-subtle-light dark:text-subtle-dark text-center -mt-6 mb-6"><em>${section.media_caption}</em></p>`;
                  }
                }

                return html;
              })
              .join("");
          } else {
            sectionsHTML =
              '<p class="text-subtle-light dark:text-subtle-dark italic">Story content will be available soon...</p>';
          }
        } catch (error) {
          console.error("Error parsing sections:", error);
          sectionsHTML =
            '<p class="text-red-500">Error loading story content. Please try again.</p>';
        }

        sectionsContainer.innerHTML = sectionsHTML;

        // Tags
        const tagsContainer = document.getElementById("tagsContainer");
        if (story.tags) {
          const tagsArray = story.tags.split(",").map((t) => t.trim());
          tagsContainer.innerHTML = tagsArray
            .map(
              (tag) =>
                `<span class="px-3 py-1 bg-background-dark/5 dark:bg-background-light/5 text-sm rounded-full border border-subtle-light/20 dark:border-subtle-dark/20">${
                  tag.startsWith("#") ? tag : "#" + tag
                }</span>`
            )
            .join("");
        }
      }

      // Load navigation
      fetch("navigation.html")
        .then((res) => res.text())
        .then((html) => {
          document.getElementById("nav-container").innerHTML = html;
        })
        .catch((err) => console.error("Navigation load error:", err));

      // Load story on page load
      document.addEventListener("DOMContentLoaded", loadStory);
    </script>
  </body>
</html>
